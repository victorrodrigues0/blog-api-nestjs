// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model users {
  id       Int              @id @default(autoincrement())
  name     String
  email    String           @unique
  password String
  image    String           @default("public/")
  post     posts[]
  favorite favorite_posts[]
  comments comments[]
}

model posts {
  id             Int              @id @default(autoincrement())
  headline       String
  content        String
  user_id        Int
  user_rel       users            @relation(fields: [user_id], references: [id])
  favorite_posts favorite_posts[]
  comment_posts  comment_posts[]
  post_images    post_images[]
}

model post_images {
  id       Int    @id @default(autoincrement())
  image    String
  post_id  Int
  post_rel posts  @relation(fields: [post_id], references: [id])
}

model favorite_posts {
  resource_id  Int
  user_id      Int
  resource_rel posts @relation(fields: [resource_id], references: [id])
  user_rel     users @relation(fields: [user_id], references: [id])

  @@id([resource_id, user_id])
}

model comments {
  id            Int             @id @default(autoincrement())
  content       String
  user_id       Int
  user_rel      users           @relation(fields: [user_id], references: [id])
  comment_posts comment_posts[]
}

model comment_posts {
  comment_id  Int
  post_id     Int
  comment_rel comments @relation(fields: [comment_id], references: [id])
  post_rel    posts    @relation(fields: [post_id], references: [id])

  @@id([comment_id, post_id])
}
